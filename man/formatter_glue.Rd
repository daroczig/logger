% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/formatters.R
\name{formatter_glue}
\alias{formatter_glue}
\alias{formatter_glue_safe}
\title{Apply \code{glue} to convert R objects into a character vector}
\usage{
formatter_glue(
  ...,
  .logcall = sys.call(),
  .topcall = sys.call(-1),
  .topenv = parent.frame()
)

formatter_glue_safe(
  ...,
  .logcall = sys.call(),
  .topcall = sys.call(-1),
  .topenv = parent.frame()
)
}
\arguments{
\item{...}{passed to \code{glue} for the text interpolation}

\item{.logcall}{the logging call being evaluated (useful in
formatters and layouts when you want to have access to the raw,
unevaluated R expression)}

\item{.topcall}{R expression from which the logging function was
called (useful in formatters and layouts to extract the calling
function's name or arguments)}

\item{.topenv}{original frame of the \code{.topcall} calling function
where the formatter function will be evaluated and that is used
to look up the \code{namespace} as well via \code{logger:::top_env_name}}
}
\value{
character vector
}
\description{
\code{formatter_glue()} uses \code{\link[glue:glue]{glue::glue()}}; \code{formatter_glue_safe()} uses
\code{\link[glue:glue_safe]{glue::glue_safe()}}.
}
\note{
Although this is the default log message formatter function,
but when \pkg{glue} is not installed, \code{\link[=formatter_sprintf]{formatter_sprintf()}}
will be used as a fallback.
}
\seealso{
Other \code{log_formatters}: 
\code{\link{formatter_glue_or_sprintf}()},
\code{\link{formatter_json}()},
\code{\link{formatter_logging}()},
\code{\link{formatter_pander}()},
\code{\link{formatter_paste}()},
\code{\link{formatter_sprintf}()}
}
\concept{\code{log_formatters}}

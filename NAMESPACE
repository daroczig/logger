# Generated by roxygen2: do not edit by hand

S3method(as.loglevel,character)
S3method(as.loglevel,default)
S3method(as.loglevel,integer)
S3method(as.loglevel,numeric)
S3method(print,loglevel)
export("%except%")
export(DEBUG)
export(ERROR)
export(FATAL)
export(INFO)
export(OFF)
export(SUCCESS)
export(TRACE)
export(WARN)
export(appender_async)
export(appender_console)
export(appender_file)
export(appender_kinesis)
export(appender_pushbullet)
export(appender_slack)
export(appender_stderr)
export(appender_stdout)
export(appender_syslog)
export(appender_syslognet)
export(appender_tee)
export(appender_telegram)
export(appender_void)
export(as.loglevel)
export(colorize_by_log_level)
export(delete_logger_index)
export(deparse_to_one_line)
export(fail_on_missing_package)
export(formatter_cli)
export(formatter_glue)
export(formatter_glue_or_sprintf)
export(formatter_glue_safe)
export(formatter_json)
export(formatter_logging)
export(formatter_pander)
export(formatter_paste)
export(formatter_sprintf)
export(get_logger_meta_variables)
export(grayscale_by_log_level)
export(layout_blank)
export(layout_gha)
export(layout_glue)
export(layout_glue_colors)
export(layout_glue_generator)
export(layout_json)
export(layout_json_parser)
export(layout_logging)
export(layout_simple)
export(layout_syslognet)
export(log_appender)
export(log_chunk_time)
export(log_debug)
export(log_elapsed)
export(log_elapsed_start)
export(log_error)
export(log_errors)
export(log_eval)
export(log_failure)
export(log_fatal)
export(log_formatter)
export(log_indices)
export(log_info)
export(log_layout)
export(log_level)
export(log_messages)
export(log_namespaces)
export(log_separator)
export(log_shiny_input_changes)
export(log_success)
export(log_threshold)
export(log_tictoc)
export(log_trace)
export(log_warn)
export(log_warnings)
export(log_with_separator)
export(logger)
export(skip_formatter)
export(with_log_threshold)
importFrom(utils,assignInMyNamespace)
importFrom(utils,assignInNamespace)
importFrom(utils,capture.output)
importFrom(utils,compareVersion)
importFrom(utils,getFromNamespace)
importFrom(utils,packageVersion)
importFrom(utils,str)
